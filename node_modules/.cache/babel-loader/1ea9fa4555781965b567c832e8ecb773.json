{"ast":null,"code":"var _jsxFileName = \"/Users/joanne/Documents/react-timer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport useHistoryRecord from \"./hooks/useHistoryRecord\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimerContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [hour, setHour] = useLocalStorage(\"hour\");\n  const [minute, setMinute] = useLocalStorage(\"minute\");\n  const [second, setSecond] = useLocalStorage(\"second\");\n  const [isClick, setIsClick] = useState(false);\n  const [history, setHistory] = useHistoryRecord(\"history\");\n  console.log(JSON.parse(history));\n  const handleRestart = e => {\n    setHour(\"00\");\n    setMinute(\"00\");\n    setSecond(\"00\");\n    setIsClick(false);\n  };\n  useEffect(() => {\n    if (isClick) {\n      const interval = setInterval(() => setSecond(+second + 1), 1000);\n      if (second === 60) {\n        setMinute(+minute + 1);\n        setSecond(0);\n      }\n      if (minute === 60) {\n        setHour(+hour + 1);\n        setMinute(0);\n      }\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(TimerContext.Provider, {\n    value: (hour, minute, second),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hour\",\n          children: [hour, \" : \", minute, \" : \", second]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsClick(false),\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsClick(prevState => !prevState),\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRestart,\n            children: \"Restart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: history.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n              id: Date.now(),\n              children: [record.hour, \" : \", record.minute, \" : \", record.second]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3/L/KGDKFM+6Bifipn1WZG4AH7E=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage, useHistoryRecord];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useHistoryRecord","useLocalStorage","TimerContext","App","hour","setHour","minute","setMinute","second","setSecond","isClick","setIsClick","history","setHistory","console","log","JSON","parse","handleRestart","e","interval","setInterval","clearInterval","prevState","map","record","Date","now"],"sources":["/Users/joanne/Documents/react-timer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport useHistoryRecord from \"./hooks/useHistoryRecord\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nexport const TimerContext = createContext();\n\nfunction App() {\n  const [hour, setHour] = useLocalStorage(\"hour\");\n  const [minute, setMinute] = useLocalStorage(\"minute\");\n  const [second, setSecond] = useLocalStorage(\"second\");\n\n  const [isClick, setIsClick] = useState(false);\n  const [history, setHistory] = useHistoryRecord(\"history\");\n  console.log(JSON.parse(history));\n\n  const handleRestart = (e) => {\n    setHour(\"00\");\n    setMinute(\"00\");\n    setSecond(\"00\");\n    setIsClick(false);\n  };\n\n  useEffect(() => {\n    if (isClick) {\n      const interval = setInterval(() => setSecond(+second + 1), 1000);\n      if (second === 60) {\n        setMinute(+minute + 1);\n        setSecond(0);\n      }\n      if (minute === 60) {\n        setHour(+hour + 1);\n        setMinute(0);\n      }\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  });\n\n  return (\n    <TimerContext.Provider value={(hour, minute, second)}>\n      <div>\n        <h1>Stopwatch</h1>\n        <div className=\"timer\">\n          <div className=\"hour\">\n            {hour} : {minute} : {second}\n          </div>\n          <div className=\"button\">\n            <button onClick={() => setIsClick(false)}>Stop</button>\n            <button onClick={() => setIsClick((prevState) => !prevState)}>\n              Start\n            </button>\n            <button onClick={handleRestart}>Restart</button>\n            <button>Record</button>\n          </div>\n          <div>\n            <h3>History</h3>\n            <div>\n              {history.map((record) => (\n                <div id={Date.now()}>\n                  {record.hour} : {record.minute} : {record.second}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </TimerContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}