{"ast":null,"code":"var _jsxFileName = \"/Users/joanne/Documents/react-timer/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [second, setSecond] = useLocalStorage(\"second\");\n  const [minute, setMinute] = useLocalStorage(\"minute\");\n  const [hour, setHour] = useLocalStorage(\"hour\");\n  const [isClicked, setIsClicked] = useState(false);\n  const handleClick = e => {\n    setIsClicked(prevState => !prevState);\n    // setSecond((second) => {\n    //   let sec = Number(second) + 1;\n    //   if (sec < 10) return `0${sec}`;\n    //   if (sec < 60) return sec.toString();\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Coder Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(UpdateTimer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"func-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            name: \"stop\",\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            name: \"start\",\n            onClick: handleClick,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            name: \"reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ncbf11kgMbZAjMueEqC9DwvttQ8=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useLocalStorage","App","second","setSecond","minute","setMinute","hour","setHour","isClicked","setIsClicked","handleClick","e","prevState"],"sources":["/Users/joanne/Documents/react-timer/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nfunction App() {\n  const [second, setSecond] = useLocalStorage(\"second\");\n  const [minute, setMinute] = useLocalStorage(\"minute\");\n  const [hour, setHour] = useLocalStorage(\"hour\");\n  const [isClicked, setIsClicked] = useState(false);\n\n  const handleClick = (e) => {\n    setIsClicked((prevState) => !prevState);\n    // setSecond((second) => {\n    //   let sec = Number(second) + 1;\n    //   if (sec < 10) return `0${sec}`;\n    //   if (sec < 60) return sec.toString();\n    // });\n  };\n\n  return (\n    <div className=\"App\">\n      <header>Coder Timer</header>\n      <main>\n        <div className=\"container\">\n          <UpdateTimer />\n          <div className=\"func-btn\">\n            <button name=\"stop\">Stop</button>\n            <button name=\"start\" onClick={handleClick}>\n              Start\n            </button>\n            <button name=\"reset\">Reset</button>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,yBAAyB;AAAC;AAEtD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,eAAe,CAAC,QAAQ,CAAC;EACrD,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGL,eAAe,CAAC,QAAQ,CAAC;EACrD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,eAAe,CAAC,MAAM,CAAC;EAC/C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,WAAW,GAAIC,CAAC,IAAK;IACzBF,YAAY,CAAEG,SAAS,IAAK,CAACA,SAAS,CAAC;IACvC;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,eAC5B;MAAA,uBACE;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eACf;UAAK,SAAS,EAAC,UAAU;UAAA,wBACvB;YAAQ,IAAI,EAAC,MAAM;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACjC;YAAQ,IAAI,EAAC,OAAO;YAAC,OAAO,EAAEF,WAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEjC,eACT;YAAQ,IAAI,EAAC,OAAO;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/B;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhCQT,GAAG;EAAA,QACkBD,eAAe,EACfA,eAAe,EACnBA,eAAe;AAAA;AAAA,KAHhCC,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}