{"ast":null,"code":"var _jsxFileName = \"/Users/joanne/Documents/react-timer/src/App.js\",\n  _s = $RefreshSig$();\nimport { Button, Card, CardActions, CardContent, Grid, Paper, Typography } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [hour, setHour] = useLocalStorage(\"hour\");\n  const [minute, setMinute] = useLocalStorage(\"minute\");\n  const [second, setSecond] = useLocalStorage(\"second\");\n  const [isClick, setIsClick] = useState(false);\n  const [history, setHistory] = useState([]);\n  const handleRestart = e => {\n    setHour(\"0\");\n    setMinute(\"0\");\n    setSecond(\"0\");\n    setIsClick(false);\n  };\n  const handleHistory = () => {\n    setHistory([...history, {\n      hour,\n      minute,\n      second\n    }]);\n  };\n  useEffect(() => {\n    if (isClick) {\n      const interval = setInterval(() => setSecond(+second + 1), 1000);\n      if (second === 60) {\n        setMinute(+minute + 1);\n        setSecond(0);\n      }\n      if (minute === 60) {\n        setHour(+hour + 1);\n        setMinute(0);\n      }\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexGrow: 1,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: \"Stopwatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            textAlign: \"center\",\n            children: [hour, \" : \", minute, \" : \", second]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setIsClick(false),\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setIsClick(prevState => !prevState),\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleRestart,\n            children: \"Restart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleHistory,\n            children: \"Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: \"bold\",\n          children: \"History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), history.map(record => /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          children: [record.hour, \" : \", record.minute, \" : \", record.second]\n        }, Date.now(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l4eFlf7XVqsVknum2nZcgPtPiCs=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","Card","CardActions","CardContent","Grid","Paper","Typography","Box","Container","React","useState","useEffect","useLocalStorage","App","hour","setHour","minute","setMinute","second","setSecond","isClick","setIsClick","history","setHistory","handleRestart","e","handleHistory","interval","setInterval","clearInterval","prevState","map","record","Date","now"],"sources":["/Users/joanne/Documents/react-timer/src/App.js"],"sourcesContent":["import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nfunction App() {\n  const [hour, setHour] = useLocalStorage(\"hour\");\n  const [minute, setMinute] = useLocalStorage(\"minute\");\n  const [second, setSecond] = useLocalStorage(\"second\");\n  const [isClick, setIsClick] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  const handleRestart = (e) => {\n    setHour(\"0\");\n    setMinute(\"0\");\n    setSecond(\"0\");\n    setIsClick(false);\n  };\n\n  const handleHistory = () => {\n    setHistory([...history, { hour, minute, second }]);\n  };\n\n  useEffect(() => {\n    if (isClick) {\n      const interval = setInterval(() => setSecond(+second + 1), 1000);\n      if (second === 60) {\n        setMinute(+minute + 1);\n        setSecond(0);\n      }\n      if (minute === 60) {\n        setHour(+hour + 1);\n        setMinute(0);\n      }\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  });\n\n  return (\n    <div id=\"app\">\n      <Grid\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexGrow={1}\n      >\n        <Card>\n          <CardContent>\n            <Typography variant=\"h3\">Stopwatch</Typography>\n          </CardContent>\n\n          <CardContent>\n            <Typography variant=\"h2\" textAlign=\"center\">\n              {hour} : {minute} : {second}\n            </Typography>\n          </CardContent>\n\n          <CardActions>\n            <Button variant=\"contained\" onClick={() => setIsClick(false)}>\n              Stop\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => setIsClick((prevState) => !prevState)}\n            >\n              Start\n            </Button>\n            <Button variant=\"contained\" onClick={handleRestart}>\n              Restart\n            </Button>\n            <Button variant=\"contained\" onClick={handleHistory}>\n              Record\n            </Button>\n          </CardActions>\n        </Card>\n\n        <Card>\n          <Typography variant=\"h5\" fontWeight=\"bold\">\n            History\n          </Typography>\n\n          {history.map((record) => (\n            <Paper elevation={3} key={Date.now()}>\n              {record.hour} : {record.minute} : {record.second}\n            </Paper>\n          ))}\n        </Card>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}